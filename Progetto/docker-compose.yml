services:

  web-app:
    container_name: web-app
    image: vulnerables/web-dvwa:latest
    ports:
      - 9999:80

  nginx:
    container_name: nginx
    build: ./nginx
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    environment:
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=password
      - ELASTIC_ENDPOINT=http://elasticsearch:9200/requests/_doc
      - API_ENDPOINT=http://sqli-detector:8899/api/v1/check
    volumes:
      - ./nginx/certs:/usr/local/openresty/nginx/certs
    depends_on:
      - web-app

  sqli-detector:
    container_name: sqli-detector
    build: ./sqli-detector
    volumes:
      - ./sqli-detector/models:/usr/src/models
    ports:
      - 8899:8899        

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=password         # Password for the "elastic" user
      - KIBANA_SYSTEM_PASSWORD=password   # Password for the "kibana_system" user
      - xpack.security.enabled=true
    ports:
      - 9200:9200
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
      - ./elasticsearch/run.sh:/usr/local/bin/setup-script.sh
    entrypoint: ["/bin/sh", "/usr/local/bin/setup-script.sh"]
    healthcheck:
      test: ["CMD", "curl", "-s", "http://localhost:9200/_cluster/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.9.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=password
      - xpack.security.enabled=true
    ports:
      - 5601:5601
    depends_on:
      elasticsearch:
        condition: service_healthy

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - 9443:9443
    volumes:
      - ./portainer/data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped